<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.jbundle.util.webapp</groupId>
    <artifactId>jbundle-util-webapp-reactor</artifactId>
    <version>1.1.0-SNAPSHOT</version>
  </parent>

  <artifactId>org.jbundle.util.webapp.webstart</artifactId>

  <packaging>war</packaging>
  <name>jbundle-util-webapp-webstart - jnlp servlet</name>
  
  <properties>
    <package>${project.groupId}.sample</package>	<!-- Package name of the applet code -->
  </properties>

    <build>
        <plugins>
            <plugin> <!-- Need to use this plugin to build war files -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <configuration>
                    <archive>
                        <!-- add bundle plugin generated manifest to the war -->
                        <manifestFile>${project.build.outputDirectory}/META-INF/MANIFEST.MF
                        </manifestFile>
                        <!--
                            For some reason, adding Bundle-ClassPath in maven-bundle-plugin
                            confuses that plugin and it generates wrong Import-Package, etc.
                            So, we generate it here.
                        -->
                        <manifestEntries>
                            <Bundle-ClassPath>WEB-INF/classes/</Bundle-ClassPath>
                        </manifestEntries>
                    </archive>
		          <webResources>
		            <resource>
		              <!-- this is relative to the pom.xml directory -->
		              <directory>src/main/webapp</directory>
		              <filtering>true</filtering>
		            </resource>
		          </webResources>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.felix</groupId>
                <artifactId>maven-bundle-plugin</artifactId>
                <configuration>
                    <supportedProjectTypes>
                        <supportedProjectType>jar</supportedProjectType>
                        <supportedProjectType>bundle</supportedProjectType>
                        <supportedProjectType>war</supportedProjectType>
                    </supportedProjectTypes>
                    <instructions>
                        <Export-Package></Export-Package>
            <Import-Package>
                jnlp.sample.util;resolution:=optional;version=${jnlp-servlet.version},
                jnlp.sample.servlet;resolution:=optional;version=${jnlp-servlet.version},
                jnlp.sample.servlet.resources;resolution:=optional;version=${jnlp-servlet.version},
                jnlp.sample.jardiff;resolution:=optional;version=${jnlp-servlet.version},
                jnlp.sample.jardiff.resources;resolution:=optional;version=${jnlp-servlet.version},
                org.osgi.framework;resolution:=optional, <!-- I Don't explicitly reference this, but I need to check to see if this exists to enable OSGi -->
            </Import-Package>
                        <!-- This is the context root of this application -->
                        <Web-ContextPath>/${project.artifactId}</Web-ContextPath>
                        <!--
                            Bundle-ClassPath without "." confuses bundle plugin. So, leave it
                            unspecified (i.e., default to ".") and we shall generate it using
                            war-plugin's manifest customization
                            <Bundle-ClassPath>WEB-INF/classes/</Bundle-ClassPath>
                        -->
                    </instructions>
                </configuration>
                <executions>
                    <execution>
                        <id>bundle-manifest</id>
                        <phase>process-classes</phase>
                        <goals>
                            <goal>manifest</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

      <plugin>
        <groupId>org.codehaus.mojo.webstart</groupId>
        <artifactId>webstart-maven-plugin</artifactId>
        <executions>
          <execution>
            <phase>process-resources</phase>
            <goals>
              <goal>jnlp-download-servlet</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <jnlpFiles>

            <jnlpFile>
              <templateFilename>launch.vm</templateFilename>
              <outputFilename>launch.jnlp</outputFilename>
              <jarResources>
                <jarResource>
                  <groupId>${project.groupId}</groupId>
                  <artifactId>org.jbundle.util.webapp.sample</artifactId>
                  <version>${project.version}</version>
                  <mainClass>org.jbundle.util.webapp.sample.App</mainClass>	<!-- These properties are declared in my parent pom (jbundle-util-webapp-webstart) -->
                </jarResource>
              </jarResources>
            </jnlpFile>

            <jnlpFile>
              <templateFilename>applet.vm</templateFilename>
              <outputFilename>applet.jnlp</outputFilename>
              <jarResources>
                <jarResource>
                  <groupId>${project.groupId}</groupId>
                  <artifactId>org.jbundle.util.webapp.sample</artifactId>
                  <version>${project.version}</version>
                  <mainClass>org.jbundle.util.webapp.sample.App</mainClass>
                </jarResource>
              </jarResources>
            </jnlpFile>

          </jnlpFiles>
          <pack200>true</pack200>
          <gzip>true</gzip>
          <outputDirectoryName>docs</outputDirectoryName>
        </configuration>
      </plugin>
    </plugins>
  </build>
      
  <dependencies>
    <dependency>
        <groupId>org.jbundle.util.osgi.wrapped</groupId>
        <artifactId>org.jbundle.util.osgi.wrapped.jnlp.sample</artifactId>
    </dependency>
  </dependencies>

</project>
