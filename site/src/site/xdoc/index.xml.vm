<?xml version="1.0"?>
<document xmlns="http://maven.apache.org/XDOC/2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/XDOC/2.0 http://maven.apache.org/xsd/xdoc-2.0.xsd">
  <properties>
    <title>JBundle Simple Servlets Collection</title>
    <author email="don@tourgeek.com">Don Corley</author>
  </properties>

  <body>
    <section name="Welcome to the Simple Web Servlet Collection!">
      <p>
        ${project.description}
      </p>
      <p>
  <ul>
    <li><a href="#OSGi_to_Web_Start_Servlet">OSGi to Web Start Servlet</a></li>
    <li><a href="#Basic_Web_Site_Servlet">Basic Web Site</a></li>
    <li><a href="#Redirect_Servlet">Redirect Servlet</a></li>
    <li><a href="#Proxy_Servlet">Proxy Servlet</a></li>
    <!-- li><a href="#XSL_Servlet">XSL Servlet</a></li -->
    <li><a href="#WebDav_Servlet">WebDav Servlet</a></li>
    <li><a href="#File_Download_Servlet">File Download Servlet</a></li>
    <li><a href="#File_Upload_Servlet">File Upload Servlet</a></li>
    <li><a href="#CGI_Servlet">CGI Servlet</a></li>
    <li><a href="#WebStart_Applet_or_Application">Web Start Applet or Application</a></li>
  </ul>
      </p>
      
      <p>
        Starting a web servlet is as easy as starting any other OSGi bundle.
        Just start the bundle for the servlet that you want and tweek the configuration.
        For example if you are running under the felix OSGi container, just type this:
      </p>
<style type="text/css">
span.response {color:blue}
span.comment {color:blue; font-style:italic}
</style>
<source>
<span class="response">g!</span> deploy -s 'Apache Felix Http Jetty'<span class="comment">(Start a web server)</span><br/>
<span class="response">g!</span> repos add ${project.organization.url}/repository.xml<!-- ${OBRRepositoryIndex} --> <span class="comment">(Adding the jbundle obr index simplifies installing bundles)</span><br/>
<span class="response">g!</span> deploy -s '${project.groupId}.<strong><i>servletname</i></strong>' <span class="comment">(Install and start your OSGi servlet)</span><br/>
</source>

      <subsection name="OSGi to Web Start Servlet">
      <p>
        This project allows OSGi bundles to run as Web Start applets and an application.
        <a href="../osgi-webstart">OSGi to Web Start Servlet</a>
      </p>
      </subsection>
      
      <subsection name="Basic Web Site Servlet">
      <p>
        This project provides a template for a <a href="website">simple web site</a>.
        Your files can be served from local storage or from an OSGi resource by setting the 'basePath' parameter.
        <br/><code>basePath = file:/space/web/</code> will serve files from local storage since this is a valid URL.
        <br/><code>basePath = org/jbundle/res/docs/</code> will serve files from the OSGi location starting with this path.
      </p>
      </subsection>
      
      <subsection name="Redirect Servlet">
      <p>
        This project provides a template for a <a href="redirect">redirect servlet</a>.
        This servlet will automatically redirect matching urls to another site.
        This example redirects you to the root page for this site. It could redirect you anywhere.
        You can redirect any request by setting the target property:
        <br/><code>target = http://www.jbundle.org</code> will redirect all requests to this URL.
        <br/>If you just want to redirect a specific url, add the match parameter:
        <br/><code>match = /pathtomatch</code> will redirect all requests that match this path to this URL.
        <br/>You can also user regular expressions with the RegexRedirect servlet. Just use these parameters:
        <br/><code>regex = www.+.tourgeek.com</code> will redirect all requests that match this regular expression.
        <br/><code>regextarget = demo/index.html</code> will redirect all requests to this URL.
        <br/>You can also redirect based on the user's web browser by setting the web redirect (ie, firefox, chrome, safari, webkit, mobile)
        <br/><code>ie = index-ie.html</code> will redirect all requests from internet explorer to this URL.
      </p>
      </subsection>
      
      <subsection name="Proxy Servlet">
      <p>
        This project provides a template for a <a href="proxy/index.html">proxy servlet</a>.
        This servlet will forward requests to another site and return the result as if it existed on your server.
        This example delivers the information from the root page for this site. It could forward data from anywhere.
        <br/>You can tunnel web requests to a proxy by setting the urlprefix param:
        <br/><code>proxy =  http://www.jbundle.org:8181/jbundle/simpleservlets/</code> will display content from the proxy url.
      </p>
      </subsection>
      
      <subsection name="WebDav Servlet">
      <p>
        This project provides a template for a <a href="webdav">webdav site</a>.
        You can read and write files to this site using most applications (such as MS Word, OpenOffice, etc).
        Of course you would want to add some security to your site.
        This servlet uses the tomcat webdav servlet, so al you have to do is set the wevdav params:
        <br/><code>basePath =  /space/web/jbundle/</code> will set the local web file storage location.
        <br/><code>readonly =  false</code> will allow uploads.
        <br/><code>listings =  true</code> will display directory listings.
      </p>
      </subsection>
      
      <subsection name="File Download Servlet">
      <p>
        This project provides a template for a <a href="files">simple file download site</a>.
        Just drop your files into the root directory and your users will be able to view and download your files.
        This servlet uses the tomcat default servlet, so al you have to do is set the default params:
        <br/><code>basePath =  /space/web/jbundle/</code> will set the local web file storage location.
        <br/><code>listings =  true</code> will display directory listings.
        <br/>Note: This is only included for legacy compatibility, you should use the <a href="#Basic_Web_Site_Servlet">Basic Web Site</a>
        for most applications.
      </p>
      </subsection>
      
      <subsection name="File Upload Servlet">
      <p>
        This project provides a template for a <a href="upload">file upload site</a>.
        Select a file in your web browser, and it will be uploaded to your web server. Try uploading a
        small file to this sample site.
        Note: This package uses the free, but copyrighted packages of servlets.com. Any commercial use
        can only be done with the permission of the author at <a href="http://www.servlets.com">www.servlets.com</a>.
        Because of this issue, you will need to deploy the servlets.com packages yourself.
      </p>
      </subsection>
      
      <subsection name="CGI Servlet">
      <p>
        This project provides a template for a <a href="http://www.tourgeek.com/awstats/awstats.pl?config=tourgeek.com">cgi servlet</a>.
        This servlet will run a non-java web application as a servlet. This example shows one of my favorite
        non-java apps, <a href="http://doncorley.blogspot.com/2008/09/using-awstats-with-glassfish.html">awstats</a>.
        This <a href="http://doncorley.blogspot.com/2011/01/installing-git-web-on-java-web-server.html">blog post</a> shows you how to install git-web in a java web server.
      </p>
      </subsection>
      
      <subsection name="WebStart Applet or Application">
      <p>
        This project provides a template for a <a href="webstart">Applet or Application servlet</a>.
        This project packages and runs a WebStart application. This example shows both Web Start applets and an application.
      </p>
      </subsection>
      
      <!-- subsection name="XSL Servlet">
      <p>
        This project provides a template for an XSL servlet.
        Just supply the <i>source</i> file path and the xslt <i>stylesheet</i> file path and this
        servlet will run an xslt transformation and output the result.
      </p>
      </subsection -->

    </section>
    
    <section name="Project Information">
      <p>
        This bundle provides is hosted on sourceforge at <a href="http://www.sourceforge.net/projects/simpleservlets">http://www.sourceforge.net/projects/simpleservlets</a>
        <a href="http://www.sourceforge.net/projects/simpleservlets"><img src="http://sourceforge.net/sflogo.php?group_id=239200&amp;type=3" width="88" height="31" alt="SourceForge" align="bottom" /></a>
      </p>
    </section>
  </body>
</document>

